[1mdiff --git a/3_renderer_dtu_timer_numviews.ipynb b/3_renderer_dtu_timer_numviews.ipynb[m
[1mindex 7fb372a..042855a 100644[m
[1m--- a/3_renderer_dtu_timer_numviews.ipynb[m
[1m+++ b/3_renderer_dtu_timer_numviews.ipynb[m
[36m@@ -2,18 +2,9 @@[m
  "cells": [[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 3,[m
[32m+[m[32m   "execution_count": 1,[m
    "metadata": {},[m
[31m-   "outputs": [[m
[31m-    {[m
[31m-     "name": "stdout",[m
[31m-     "output_type": "stream",[m
[31m-     "text": [[m
[31m-      "The autoreload extension is already loaded. To reload it, use:\n",[m
[31m-      "  %reload_ext autoreload\n"[m
[31m-     ][m
[31m-    }[m
[31m-   ],[m
[32m+[m[32m   "outputs": [],[m
    "source": [[m
     "import sys,os,imageio,lpips\n",[m
     "root = '/home/youngsun/documents/mvs/mvsnerf_timing'\n",[m
[36m@@ -45,18 +36,17 @@[m
     "\n",[m
     "import numpy as np\n",[m
     "import pandas as pd\n",[m
[31m-    "import matplotlib.pyplot as plt\n",[m
     "\n",[m
     "%load_ext autoreload\n",[m
     "%autoreload 2\n",[m
     "\n",[m
     "torch.cuda.set_device(0)\n",[m
[31m-    "os.environ['CUDA_VISIBLE_DEVICES'] = '2'"[m
[32m+[m[32m    "os.environ['CUDA_VISIBLE_DEVICES'] = '0'"[m
    ][m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 4,[m
[32m+[m[32m   "execution_count": 2,[m
    "metadata": {},[m
    "outputs": [[m
     {[m
[36m@@ -105,7 +95,7 @@[m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 5,[m
[32m+[m[32m   "execution_count": 3,[m
    "metadata": {},[m
    "outputs": [],[m
    "source": [[m
[36m@@ -117,7 +107,7 @@[m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 6,[m
[32m+[m[32m   "execution_count": 4,[m
    "metadata": {[m
     "scrolled": true[m
    },[m
[36m@@ -161,7 +151,7 @@[m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 7,[m
[32m+[m[32m   "execution_count": 5,[m
    "metadata": {},[m
    "outputs": [],[m
    "source": [[m
[36m@@ -383,7 +373,7 @@[m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 8,[m
[32m+[m[32m   "execution_count": 6,[m
    "metadata": {},[m
    "outputs": [],[m
    "source": [[m
[36m@@ -1034,169 +1024,272 @@[m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 10,[m
[31m-   "metadata": {},[m
[31m-   "outputs": [],[m
[31m-   "source": [[m
[31m-    "records_df = pd.read_csv('./csv/3_renderer_dtu_timer_numviews.csv', index_col=0)"[m
[31m-   ][m
[31m-  },[m
[31m-  {[m
[31m-   "cell_type": "code",[m
[31m-   "execution_count": 19,[m
[31m-   "metadata": {},[m
[31m-   "outputs": [[m
[31m-    {[m
[31m-     "data": {[m
[31m-      "text/plain": [[m
[31m-       "['total time',\n",[m
[31m-       " 'mvsnet total time',\n",[m
[31m-       " 'mvsnet feature extraction',\n",[m
[31m-       " 'mvsnet cost volume',\n",[m
[31m-       " 'mvsnet 3D-CNN',\n",[m
[31m-       " 'mvsnerf total time',\n",[m
[31m-       " 'mvsnerf volume sampling',\n",[m
[31m-       " 'mvsnerf nerf',\n",[m
[31m-       " 'mvsnerf rendering']"[m
[31m-      ][m
[31m-     },[m
[31m-     "execution_count": 19,[m
[31m-     "metadata": {},[m
[31m-     "output_type": "execute_result"[m
[31m-    }[m
[31m-   ],[m
[31m-   "source": [[m
[31m-    "list(records_df.columns.values[7:])"[m
[31m-   ][m
[31m-  },[m
[31m-  {[m
[31m-   "cell_type": "code",[m
[31m-   "execution_count": 20,[m
[31m-   "metadata": {},[m
[31m-   "outputs": [[m
[31m-    {[m
[31m-     "data": {[m
[31m-      "text/plain": [[m
[31m-       "[2693.0, 105.0, 4.9, 33.9, 65.8, 2497.0, 129.2, 2333.0, 19.8]"[m
[31m-      ][m
[31m-     },[m
[31m-     "execution_count": 20,[m
[31m-     "metadata": {},[m
[31m-     "output_type": "execute_result"[m
[31m-    }[m
[31m-   ],[m
[31m-   "source": [[m
[31m-    "list(records_df.iloc[0].values[7:])"[m
[31m-   ][m
[31m-  },[m
[31m-  {[m
[31m-   "cell_type": "code",[m
[31m-   "execution_count": 17,[m
[32m+[m[32m   "execution_count": 46,[m
    "metadata": {},[m
    "outputs": [[m
     {[m
      "data": {[m
[32m+[m[32m      "text/html": [[m
[32m+[m[32m       "<div>\n",[m
[32m+[m[32m       "<style scoped>\n",[m
[32m+[m[32m       "    .dataframe tbody tr th:only-of-type {\n",[m
[32m+[m[32m       "        vertical-align: middle;\n",[m
[32m+[m[32m       "    }\n",[m
[32m+[m[32m       "\n",[m
[32m+[m[32m       "    .dataframe tbody tr th {\n",[m
[32m+[m[32m       "        vertical-align: top;\n",[m
[32m+[m[32m       "    }\n",[m
[32m+[m[32m       "\n",[m
[32m+[m[32m       "    .dataframe thead th {\n",[m
[32m+[m[32m       "        text-align: right;\n",[m
[32m+[m[32m       "    }\n",[m
[32m+[m[32m       "</style>\n",[m
[32m+[m[32m       "<table border=\"1\" class=\"dataframe\">\n",[m
[32m+[m[32m       "  <thead>\n",[m
[32m+[m[32m       "    <tr style=\"text-align: right;\">\n",[m
[32m+[m[32m       "      <th></th>\n",[m
[32m+[m[32m       "      <th>experiment name</th>\n",[m
[32m+[m[32m       "      <th>novel scenes synthesized</th>\n",[m
[32m+[m[32m       "      <th>number of source images</th>\n",[m
[32m+[m[32m       "      <th>image scale</th>\n",[m
[32m+[m[32m       "      <th>psnr</th>\n",[m
[32m+[m[32m       "      <th>ssim</th>\n",[m
[32m+[m[32m       "      <th>lpips</th>\n",[m
[32m+[m[32m       "      <th>total time</th>\n",[m
[32m+[m[32m       "      <th>mvsnet total time</th>\n",[m
[32m+[m[32m       "      <th>mvsnet feature extraction</th>\n",[m
[32m+[m[32m       "      <th>mvsnet cost volume</th>\n",[m
[32m+[m[32m       "      <th>mvsnet 3D-CNN</th>\n",[m
[32m+[m[32m       "      <th>mvsnerf total time</th>\n",[m
[32m+[m[32m       "      <th>mvsnerf volume sampling</th>\n",[m
[32m+[m[32m       "      <th>mvsnerf nerf</th>\n",[m
[32m+[m[32m       "      <th>mvsnerf rendering</th>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "  </thead>\n",[m
[32m+[m[32m       "  <tbody>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>0</th>\n",[m
[32m+[m[32m       "      <td>base</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>3</td>\n",[m
[32m+[m[32m       "      <td>1.00</td>\n",[m
[32m+[m[32m       "      <td>26.2</td>\n",[m
[32m+[m[32m       "      <td>0.93</td>\n",[m
[32m+[m[32m       "      <td>0.17</td>\n",[m
[32m+[m[32m       "      <td>2693.0</td>\n",[m
[32m+[m[32m       "      <td>105.0</td>\n",[m
[32m+[m[32m       "      <td>4.9</td>\n",[m
[32m+[m[32m       "      <td>33.9</td>\n",[m
[32m+[m[32m       "      <td>65.8</td>\n",[m
[32m+[m[32m       "      <td>2497.0</td>\n",[m
[32m+[m[32m       "      <td>129.2</td>\n",[m
[32m+[m[32m       "      <td>2333.0</td>\n",[m
[32m+[m[32m       "      <td>19.8</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>1</th>\n",[m
[32m+[m[32m       "      <td>base+more_scenes</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>3</td>\n",[m
[32m+[m[32m       "      <td>1.00</td>\n",[m
[32m+[m[32m       "      <td>25.8</td>\n",[m
[32m+[m[32m       "      <td>0.93</td>\n",[m
[32m+[m[32m       "      <td>0.16</td>\n",[m
[32m+[m[32m       "      <td>2718.0</td>\n",[m
[32m+[m[32m       "      <td>105.0</td>\n",[m
[32m+[m[32m       "      <td>5.1</td>\n",[m
[32m+[m[32m       "      <td>33.9</td>\n",[m
[32m+[m[32m       "      <td>65.4</td>\n",[m
[32m+[m[32m       "      <td>2521.0</td>\n",[m
[32m+[m[32m       "      <td>131.8</td>\n",[m
[32m+[m[32m       "      <td>2354.9</td>\n",[m
[32m+[m[32m       "      <td>19.7</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>2</th>\n",[m
[32m+[m[32m       "      <td>num_src=4</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>4</td>\n",[m
[32m+[m[32m       "      <td>1.00</td>\n",[m
[32m+[m[32m       "      <td>25.9</td>\n",[m
[32m+[m[32m       "      <td>0.94</td>\n",[m
[32m+[m[32m       "      <td>0.16</td>\n",[m
[32m+[m[32m       "      <td>2741.0</td>\n",[m
[32m+[m[32m       "      <td>111.0</td>\n",[m
[32m+[m[32m       "      <td>6.2</td>\n",[m
[32m+[m[32m       "      <td>39.1</td>\n",[m
[32m+[m[32m       "      <td>65.2</td>\n",[m
[32m+[m[32m       "      <td>2524.0</td>\n",[m
[32m+[m[32m       "      <td>132.0</td>\n",[m
[32m+[m[32m       "      <td>2356.8</td>\n",[m
[32m+[m[32m       "      <td>19.8</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>3</th>\n",[m
[32m+[m[32m       "      <td>num_src=8</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>8</td>\n",[m
[32m+[m[32m       "      <td>1.00</td>\n",[m
[32m+[m[32m       "      <td>25.8</td>\n",[m
[32m+[m[32m       "      <td>0.94</td>\n",[m
[32m+[m[32m       "      <td>0.16</td>\n",[m
[32m+[m[32m       "      <td>2821.0</td>\n",[m
[32m+[m[32m       "      <td>140.0</td>\n",[m
[32m+[m[32m       "      <td>10.3</td>\n",[m
[32m+[m[32m       "      <td>63.3</td>\n",[m
[32m+[m[32m       "      <td>65.9</td>\n",[m
[32m+[m[32m       "      <td>2520.0</td>\n",[m
[32m+[m[32m       "      <td>131.2</td>\n",[m
[32m+[m[32m       "      <td>2354.0</td>\n",[m
[32m+[m[32m       "      <td>19.3</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>4</th>\n",[m
[32m+[m[32m       "      <td>num_src=12</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>12</td>\n",[m
[32m+[m[32m       "      <td>1.00</td>\n",[m
[32m+[m[32m       "      <td>25.6</td>\n",[m
[32m+[m[32m       "      <td>0.93</td>\n",[m
[32m+[m[32m       "      <td>0.16</td>\n",[m
[32m+[m[32m       "      <td>2919.0</td>\n",[m
[32m+[m[32m       "      <td>175.0</td>\n",[m
[32m+[m[32m       "      <td>15.3</td>\n",[m
[32m+[m[32m       "      <td>93.5</td>\n",[m
[32m+[m[32m       "      <td>66.1</td>\n",[m
[32m+[m[32m       "      <td>2520.0</td>\n",[m
[32m+[m[32m       "      <td>131.7</td>\n",[m
[32m+[m[32m       "      <td>2353.5</td>\n",[m
[32m+[m[32m       "      <td>19.8</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>5</th>\n",[m
[32m+[m[32m       "      <td>img_scale=0.75</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>3</td>\n",[m
[32m+[m[32m       "      <td>0.75</td>\n",[m
[32m+[m[32m       "      <td>24.0</td>\n",[m
[32m+[m[32m       "      <td>0.91</td>\n",[m
[32m+[m[32m       "      <td>0.17</td>\n",[m
[32m+[m[32m       "      <td>1563.0</td>\n",[m
[32m+[m[32m       "      <td>63.0</td>\n",[m
[32m+[m[32m       "      <td>3.9</td>\n",[m
[32m+[m[32m       "      <td>18.1</td>\n",[m
[32m+[m[32m       "      <td>41.2</td>\n",[m
[32m+[m[32m       "      <td>1418.0</td>\n",[m
[32m+[m[32m       "      <td>73.3</td>\n",[m
[32m+[m[32m       "      <td>1323.3</td>\n",[m
[32m+[m[32m       "      <td>11.9</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>6</th>\n",[m
[32m+[m[32m       "      <td>img_scale=0.50</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>3</td>\n",[m
[32m+[m[32m       "      <td>0.50</td>\n",[m
[32m+[m[32m       "      <td>20.6</td>\n",[m
[32m+[m[32m       "      <td>0.87</td>\n",[m
[32m+[m[32m       "      <td>0.21</td>\n",[m
[32m+[m[32m       "      <td>716.0</td>\n",[m
[32m+[m[32m       "      <td>35.0</td>\n",[m
[32m+[m[32m       "      <td>3.5</td>\n",[m
[32m+[m[32m       "      <td>9.9</td>\n",[m
[32m+[m[32m       "      <td>20.9</td>\n",[m
[32m+[m[32m       "      <td>622.0</td>\n",[m
[32m+[m[32m       "      <td>31.3</td>\n",[m
[32m+[m[32m       "      <td>581.6</td>\n",[m
[32m+[m[32m       "      <td>4.9</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "    <tr>\n",[m
[32m+[m[32m       "      <th>7</th>\n",[m
[32m+[m[32m       "      <td>img_scale=0.25</td>\n",[m
[32m+[m[32m       "      <td>[1, 8, 21, 30, 31, 34, 63, 82, 103, 114]</td>\n",[m
[32m+[m[32m       "      <td>3</td>\n",[m
[32m+[m[32m       "      <td>0.25</td>\n",[m
[32m+[m[32m       "      <td>17.3</td>\n",[m
[32m+[m[32m       "      <td>0.82</td>\n",[m
[32m+[m[32m       "      <td>0.23</td>\n",[m
[32m+[m[32m       "      <td>221.0</td>\n",[m
[32m+[m[32m       "      <td>19.0</td>\n",[m
[32m+[m[32m       "      <td>4.0</td>\n",[m
[32m+[m[32m       "      <td>4.9</td>\n",[m
[32m+[m[32m       "      <td>9.5</td>\n",[m
[32m+[m[32m       "      <td>155.0</td>\n",[m
[32m+[m[32m       "      <td>7.6</td>\n",[m
[32m+[m[32m       "      <td>144.7</td>\n",[m
[32m+[m[32m       "      <td>1.3</td>\n",[m
[32m+[m[32m       "    </tr>\n",[m
[32m+[m[32m       "  </tbody>\n",[m
[32m+[m[32m       "</table>\n",[m
[32m+[m[32m       "</div>"[m
[32m+[m[32m      ],[m
       "text/plain": [[m
[31m-       "'base'"[m
[32m+[m[32m       "    experiment name                  novel scenes synthesized  \\\n",[m
[32m+[m[32m       "0              base                      [1, 8, 21, 103, 114]   \n",[m
[32m+[m[32m       "1  base+more_scenes  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "2         num_src=4  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "3         num_src=8  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "4        num_src=12  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "5    img_scale=0.75  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "6    img_scale=0.50  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "7    img_scale=0.25  [1, 8, 21, 30, 31, 34, 63, 82, 103, 114]   \n",[m
[32m+[m[32m       "\n",[m
[32m+[m[32m       "   number of source images  image scale  psnr  ssim  lpips  total time  \\\n",[m
[32m+[m[32m       "0                        3         1.00  26.2  0.93   0.17      2693.0   \n",[m
[32m+[m[32m       "1                        3         1.00  25.8  0.93   0.16      2718.0   \n",[m
[32m+[m[32m       "2                        4         1.00  25.9  0.94   0.16      2741.0   \n",[m
[32m+[m[32m       "3                        8         1.00  25.8  0.94   0.16      2821.0   \n",[m
[32m+[m[32m       "4                       12         1.00  25.6  0.93   0.16      2919.0   \n",[m
[32m+[m[32m       "5                        3         0.75  24.0  0.91   0.17      1563.0   \n",[m
[32m+[m[32m       "6                        3         0.50  20.6  0.87   0.21       716.0   \n",[m
[32m+[m[32m       "7                        3         0.25  17.3  0.82   0.23       221.0   \n",[m
[32m+[m[32m       "\n",[m
[32m+[m[32m       "   mvsnet total time  mvsnet feature extraction  mvsnet cost volume  \\\n",[m
[32m+[m[32m       "0              105.0                        4.9                33.9   \n",[m
[32m+[m[32m       "1              105.0                        5.1                33.9   \n",[m
[32m+[m[32m       "2              111.0                        6.2                39.1   \n",[m
[32m+[m[32m       "3              140.0                       10.3                63.3   \n",[m
[32m+[m[32m       "4              175.0                       15.3                93.5   \n",[m
[32m+[m[32m       "5               63.0                        3.9                18.1   \n",[m
[32m+[m[32m       "6               35.0                        3.5                 9.9   \n",[m
[32m+[m[32m       "7               19.0                        4.0                 4.9   \n",[m
[32m+[m[32m       "\n",[m
[32m+[m[32m       "   mvsnet 3D-CNN  mvsnerf total time  mvsnerf volume sampling  mvsnerf nerf  \\\n",[m
[32m+[m[32m       "0           65.8              2497.0                    129.2        2333.0   \n",[m
[32m+[m[32m       "1           65.4              2521.0                    131.8        2354.9   \n",[m
[32m+[m[32m       "2           65.2              2524.0                    132.0        2356.8   \n",[m
[32m+[m[32m       "3           65.9              2520.0                    131.2        2354.0   \n",[m
[32m+[m[32m       "4           66.1              2520.0                    131.7        2353.5   \n",[m
[32m+[m[32m       "5           41.2              1418.0                     73.3        1323.3   \n",[m
[32m+[m[32m       "6           20.9               622.0                     31.3         581.6   \n",[m
[32m+[m[32m       "7            9.5               155.0                      7.6         144.7   \n",[m
[32m+[m[32m       "\n",[m
[32m+[m[32m       "   mvsnerf rendering  \n",[m
[32m+[m[32m       "0               19.8  \n",[m
[32m+[m[32m       "1               19.7  \n",[m
[32m+[m[32m       "2               19.8  \n",[m
[32m+[m[32m       "3               19.3  \n",[m
[32m+[m[32m       "4               19.8  \n",[m
[32m+[m[32m       "5               11.9  \n",[m
[32m+[m[32m       "6                4.9  \n",[m
[32m+[m[32m       "7                1.3  "[m
       ][m
      },[m
[31m-     "execution_count": 17,[m
[32m+[m[32m     "execution_count": 46,[m
      "metadata": {},[m
      "output_type": "execute_result"[m
     }[m
    ],[m
    "source": [[m
[31m-    "records_df.iloc[0].values[1]"[m
[32m+[m[32m    "pd.read_csv('./csv/3_renderer_dtu_timer_numviews.csv', index_col=0)"[m
    ][m
   },[m
   {[m
    "cell_type": "code",[m
[31m-   "execution_count": 45,[m
[31m-   "metadata": {},[m
[31m-   "outputs": [[m
[31m-    {[m
[31m-     "data": {[m
[31m-      "image/png": "\n",[m
[31m-      "text/plain": [[m
[31m-       "<Figure size 1296x576 with 1 Axes>"[m
[31m-      ][m
[31m-     },[m
[31m-     "metadata": {[m
[31m-      "needs_background": "light"[m
[31m-     },[m
[31m-     "output_type": "display_data"[m
[31m-    }[m
[31m-   ],[m
[31m-   "source": [[m
[31m-    "labels = list(records_df.columns.values[7:])\n",[m
[31m-    "times1 = list(records_df.iloc[0].values[7:])\n",[m
[31m-    "\n",[m
[31m-    "x = np.arange(len(labels))  # the label locations\n",[m
[31m-    "width = 0.1  # the width of the bars\n",[m
[31m-    "\n",[m
[31m-    "fig, ax = plt.subplots()\n",[m
[31m-    "rects1 = ax.bar(x - 3*width, list(records_df.iloc[1].values[7:]), width, label=records_df.iloc[1].values[0])\n",[m
[31m-    "rects2 = ax.bar(x - 2*width, list(records_df.iloc[2].values[7:]), width, label=records_df.iloc[2].values[0])\n",[m
[31m-    "rects3 = ax.bar(x - 1*width, list(records_df.iloc[3].values[7:]), width, label=records_df.iloc[3].values[0])\n",[m
[31m-    "rects4 = ax.bar(x, list(records_df.iloc[4].values[7:]), width, label=records_df.iloc[4].values[0])\n",[m
[31m-    "rects5 = ax.bar(x + 1*width, list(records_df.iloc[5].values[7:]), width, label=records_df.iloc[5].values[0])\n",[m
[31m-    "rects6 = ax.bar(x + 2*width, list(records_df.iloc[6].values[7:]), width, label=records_df.iloc[6].values[0])\n",[m
[31m-    "rects7 = ax.bar(x + 3*width, list(records_df.iloc[7].values[7:]), width, label=records_df.iloc[7].values[0])\n",[m
[31m-    "\n",[m
[31m-    "# Add some text for labels, title and custom x-axis tick labels, etc.\n",[m
[31m-    "ax.set_ylabel('time / ms')\n",[m
[31m-    "ax.set_title('Graph of time spent during each rendering process')\n",[m
[31m-    "ax.set_xticks(x, labels)\n",[m
[31m-    "ax.legend()\n",[m
[31m-    "\n",[m
[31m-    "fig.tight_layout()\n",[m
[31m-    "\n",[m
[31m-    "plt.rcParams[\"figure.figsize\"] = (18,8)\n",[m
[31m-    "\n",[m
[31m-    "plt.show()"[m
[31m-   ][m
[31m-  },[m
[31m-  {[m
[31m-   "cell_type": "code",[m
[31m-   "execution_count": 49,[m
[32m+[m[32m   "execution_count": null,[m
    "metadata": {},[m
[31m-   "outputs": [[m
[31m-    {[m
[31m-     "data": {[m
[31m-      "image/png": "